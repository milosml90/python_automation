#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.0 on Tue Dec 29 15:04:30 2020
#

import wx
import subprocess
from subprocess import call
import os
import json

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

moduleDir = "/etc"


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((599, 441))
        self.SetTitle("frame")

        self.panel_1 = wx.Panel(self, wx.ID_ANY)

        grid_sizer_1 = wx.GridSizer(4, 3, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.terminal = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.terminal.SetMinSize((400, 200))
        grid_sizer_1.Add(self.terminal, 0, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.button_push_script = wx.Button(self.panel_1, wx.ID_ANY, "Push script")
        self.button_push_script.SetMinSize((150, 75))
        grid_sizer_1.Add(self.button_push_script, 0, wx.ALIGN_CENTER, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.button_execute_script = wx.Button(self.panel_1, wx.ID_ANY, "Execute script")
        self.button_execute_script.SetMinSize((150, 75))
        grid_sizer_1.Add(self.button_execute_script, 0, wx.ALIGN_CENTER, 0)

        self.exe_script_argument = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.exe_script_argument.SetMinSize((113, 23))
        grid_sizer_1.Add(self.exe_script_argument, 0, wx.ALIGN_CENTER, 0)

        self.text_ctrl_3 = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        grid_sizer_1.Add(self.text_ctrl_3, 0, wx.ALIGN_CENTER, 0)

        self.button_remove_script = wx.Button(self.panel_1, wx.ID_ANY, "Remove script")
        self.button_remove_script.SetMinSize((150, 75))
        grid_sizer_1.Add(self.button_remove_script, 0, wx.ALIGN_CENTER, 0)

        self.scripts_to_remove = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        grid_sizer_1.Add(self.scripts_to_remove, 0, wx.ALIGN_CENTER, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.panel_1.SetSizer(grid_sizer_1)

        self.Layout()

        self.Bind(wx.EVT_TEXT, self.executeScript, self.terminal)
        self.Bind(wx.EVT_BUTTON, self.pushScript, self.button_push_script)
        self.Bind(wx.EVT_BUTTON, self.executeScript, self.button_execute_script)
        self.Bind(wx.EVT_TEXT_ENTER, self.executeScript, self.exe_script_argument)
        self.Bind(wx.EVT_BUTTON, self.removeScript, self.button_remove_script)
        self.Bind(wx.EVT_TEXT_ENTER, self.removeScript, self.scripts_to_remove)
        # end wxGlade

    def executeScript(self, event):  # wxGlade: MyFrame.<event_handler>
        self.moduleDirApp = self.moduleDir + "/" + self.fileName
        # input_ = input("Enter the script arguments: ")
        input_ = self.exe_script_argument.GetValue()
        # print("Input: ", input_)
        args = input_.split(' ')
        subArgs = ["adb", "shell", self.moduleDirApp] + args
        subprocess.run(subArgs)

    def pushScript(self, event):  # wxGlade: MyFrame.<event_handler>
        global moduleDir
        
        self.moduleDir = moduleDir
        
        defDir, defFile = '', ''	#default dir/ default file
        dlg = wx.FileDialog(self, 'Open File', defDir, defFile, 'All files (*.*)|*.*', wx.FD_OPEN | wx.FD_FILE_MUST_EXIST)
        if dlg.ShowModal()==wx.ID_OK:
            self.dlgPath = dlg.GetPath() 
            self.makePersistency(self.dlgPath)
            self.fileName = os.path.basename(self.dlgPath)
            self.filePath = self.dlgPath.strip(self.fileName)
            p = subprocess.run(["adb", "push", self.fileName, self.moduleDir], cwd = self.filePath, stdout = subprocess.PIPE)
            self.terminal.SetValue(p.stdout)
            self.moduleDirApp = self.moduleDir + "/" + self.fileName
            return subprocess.run(["adb", "shell", "chmod", "777", self.moduleDirApp], stdout = subprocess.PIPE)

    def removeScript(self, event):  # wxGlade: MyFrame.<event_handler>
        # scriptList = input("Enter the list of scripts for removal, separated by space: ")
        scriptList = self.scripts_to_remove.GetValue()
        scriptList = scriptList.split(' ')
        # scriptList = filter(lambda s: s.strip() != '', scriptList.split(' '))
        for script in scriptList:
            self.moduleDirApp = self.moduleDir + "/" + script
            p = subprocess.run(["adb", "shell", "rm", self.moduleDirApp])
        # return p
        
    def makePersistency(self, dlg_path):
        f = open('E:\AutomationScripts\config.txt', 'a')
        f.write(dlg_path + '\n')
        f.close()
        return f

    def readPersistency(self):
        f = open('E:\AutomationScripts\config.txt', 'a')
        f.read()
        return f
    
    
    
# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
